SimSoC-Cert, a toolkit for generating certified processor simulators
--------------------------------------------------------------------

- norm.ml: moved elsewhere everything that is architecture-specific

- in Csyntax2coq, use Format instead of Printf

- be more modular when generating the coq representation of c files:
   instead of concatening all .c and .h files into a single file all.c
   to convert it into a coq file all.v with simgen, make simgen
   generate a coq file file.v for every file.c and put all common
   definitions into another coq file required by the others.

- move run_test.sh in a more approriate place

- keep only the really used code in CompCert_Driver.ml . Then we can :
  - suppress the need to read compcert/Makefile.config at each invocation
  - restrict the scope of the directory included in CompCert by default
    (in the "Pathname.define_context")

- add a comment explaining the purpose of lightheadertype and
   syntaxtype

- add interface files (.mli)

- if there is only one processor, then we can simplify the
  pseudo-code: the local variable processor_id is not useful anymore
  and can be removed (remove calls to ExecutingProcessor and
  occurrences of processor_id: MarkExclusiveGlobal and the like need
  only 2 arguments)

- eliminate todo's in expressions

- solve problem occuring with -norm -check

- gencxx: simplify code and remove all TODO's and first-level underscore's

- ast: merge Index and Flag ?

- parser: reduce the number of conflicts in the grammar ?
